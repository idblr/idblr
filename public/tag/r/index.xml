<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Ian Buller</title>
    <link>/tag/r/</link>
      <atom:link href="/tag/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Ian Buller, 2020 &amp;middot; Opinions expressed are my own</copyright><lastBuildDate>Tue, 12 May 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>R</title>
      <link>/tag/r/</link>
    </image>
    
    <item>
      <title>Areas of a spatial segregation model significantly different from null expectations</title>
      <link>/post/2020-05-10-pval-spatseg/asymptotic-p-values-for-spatial-segregation-model/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-05-10-pval-spatseg/asymptotic-p-values-for-spatial-segregation-model/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I present code to identify areas of a spatial segregation model that exceed our null expectations using the &lt;a href=&#34;https://github.com/spatstat/spatstat/blob/master/man/relrisk.Rd&#34;&gt;relrisk&lt;/a&gt; function in the &lt;a href=&#34;https://github.com/spatstat/spatstat&#34;&gt;spatstat&lt;/a&gt; package and an assumption of normality of the estimated probabilities. A spatial segregation model was originally proposed by &lt;a href=&#34;https://doi.org/10.1111/j.1467-9876.2005.05373.x&#34;&gt;Diggle, Zheng, &amp;amp; Durr in 2005&lt;/a&gt; which estimates spatially-varying probabilities of an event of a certain type to occur in an area accounting for other types. The original method uses a Monte Carlo-based simulation, which is computationally expensive. Instead, &lt;a href=&#34;https://github.com/baddstats&#34;&gt;Adrian Baddeley&lt;/a&gt; and the spatstat team adapted the &lt;a href=&#34;https://github.com/spatstat/spatstat/blob/master/man/relrisk.Rd&#34;&gt;relrisk&lt;/a&gt; function for a multitype (m &amp;gt; 2) point pattern that has an option to compute the standard error of the probability estimates based on asymptotic theory, assuming a Poisson process.&lt;/p&gt;
&lt;p&gt;Here, I use the standard errors to compute a 95% confidence interval (CI) at all gridded pixels (“knots”) for each type. Knots with a CI that does not capture the null expectation for each type are identified. I use the provided &lt;code&gt;lansing&lt;/code&gt; dataset from the &lt;a href=&#34;https://github.com/spatstat/spatstat.data&#34;&gt;spatstat.data&lt;/a&gt; package. Created with assistance from &lt;a href=&#34;https://sph.emory.edu/faculty/profile/index.php?FID=345&#34;&gt;Dr. Lance Waller&lt;/a&gt; and &lt;a href=&#34;http://barry.rowlingson.com/&#34;&gt;Barry Rowlingson&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Packages
  library(spatstat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Data
  spatstat.data::lansing&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Marked planar point pattern: 2251 points
## Multitype, with levels = blackoak, hickory, maple, misc, redoak, whiteoak 
## window: rectangle = [0, 1] x [0, 1] units (one unit = 924 feet)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Convert the lansing data to a ppp object
  ppp_lansing &amp;lt;- spatstat::ppp(x = spatstat.data::lansing$x, 
                             y = spatstat.data::lansing$y,
                             window = spatstat::unit.square(),
                             marks = as.factor(spatstat::marks(spatstat.data::lansing)))

# Plot input
  spatstat::plot.ppp(ppp_lansing, main = &amp;quot;Lansing Woods&amp;quot;, cex = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-10-pval-spatseg/2020-05-10-asymptotic-p-values-for-spatial-segregation-model_files/figure-html/data-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Estimate nonparametric spatially-varying probabilities of type
  f1 &amp;lt;- spatstat::relrisk.ppp(ppp_lansing, casecontrol = F, diggle = T, se = T, sigma = bw.diggle)
  
# Default plots
  plot(f1$estimate, main = &amp;quot;Probability of an event by type&amp;quot;, zlim = c(0,1)) # probabilities&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-10-pval-spatseg/2020-05-10-asymptotic-p-values-for-spatial-segregation-model_files/figure-html/spatial%20segregration-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  plot(f1$SE, main = &amp;quot;Standard error of probability&amp;quot;, zlim = c(0,0.03)) # standard errors&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-10-pval-spatseg/2020-05-10-asymptotic-p-values-for-spatial-segregation-model_files/figure-html/spatial%20segregration-2.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  wh &amp;lt;- spatstat::im.apply(f1$estimate, which.max)
  types &amp;lt;- levels(spatstat::marks(spatstat.data::lansing))
  wh &amp;lt;- spatstat::eval.im(types[wh]) # most common 
  spatstat::plot.im(wh, main=&amp;quot;Most common species&amp;quot;, ribargs = list(las = 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-10-pval-spatseg/2020-05-10-asymptotic-p-values-for-spatial-segregation-model_files/figure-html/spatial%20segregration-3.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Significant p-values assumming normality of the Poisson process
## relrisk() computes standard errors based on asymptotic theory, assuming a Poisson process
  alpha &amp;lt;- 0.05                           # alpha
  z &amp;lt;- qnorm(alpha/2, lower.tail = F)     # z-statistic
  f1$u &amp;lt;- f1$estimate + z*f1$SE           # Upper CIs
  f1$l &amp;lt;- f1$estimate - z*f1$SE           # Lower CIs
  mu_0 &amp;lt;- as.vector(table(spatstat::marks(ppp_lansing))/ppp_lansing$n) # null expectations by type
  f1$p &amp;lt;- f1$estimate # copy structure of pixels, replace values
  for (i in 1:length(f1$p)) {
    f1$p[[i]]$v &amp;lt;- factor(ifelse(mu_0[i] &amp;gt; f1$u[[i]]$v, &amp;quot;lower&amp;quot;,
                                 ifelse( mu_0[i] &amp;lt; f1$l[[i]]$v, &amp;quot;higher&amp;quot;, &amp;quot;none&amp;quot;)),
                          levels = c(&amp;quot;lower&amp;quot;, &amp;quot;none&amp;quot;, &amp;quot;higher&amp;quot;))
  }

  # Plot significant p-values
  plot(f1$p, main = &amp;quot;Significant difference from null?&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-10-pval-spatseg/2020-05-10-asymptotic-p-values-for-spatial-segregation-model_files/figure-html/spatial%20segregration-4.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The final plot identifies where the spatially-varying probabilities exceed the null expected probability of each type. Areas of higher-than-expected probability could be considered “hot-spots” and areas of lower-than-expected probability could be considered “cold-spots.” Areas that are not significantly different from the null expectation could suggest additional sampling is necessary to determine if these areas are hot are cold spots.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
